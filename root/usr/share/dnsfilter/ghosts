#!/bin/sh
# [K]2022
# https://github.com/kongfl888

LOCK=/var/lock/dnsfilterg.lock
[ -f $LOCK ] && exit 1
touch $LOCK

GH=`uci -q get dnsfilter.@dnsfilter[0].easy_github`
EA=`uci -q get dnsfilter.@dnsfilter[0].enable`
D="date +'%Y-%m-%d %H:%M:%S'"

#EA=1
#GH=1

if [ "$EA" = "0" ]; then
	rm -f $LOCK
	exit 0
fi

gi=0
gl="http"
GL1=/tmp/e-g-1.txt
GL2=/tmp/e-g-2.txt
EG=/etc/dnsfilter/easy_github
RAW="ping -c 2 raw.githubusercontents.com"

rm -f ${GL1} ${GL2}
if [ "$GH" != "1" ]; then
	rm -f $LOCK
	exit 9
fi

if [ `ping -c 2 raw.githubusercontents.com | grep "64" -c` -gt 0 ]; then
	RAW="raw.githubusercontents.com"
elif [ `ping -c 2 ghproxy.com | grep "64" -c` -gt 0 ]; then
	RAW="ghproxy.com/https://raw.githubusercontent.com"
else
	RAW="raw.githubusercontent.com"
fi

curl --connect-timeout 6 --retry 2 -m 80 -kLfso $GL1 "https://$RAW/kongfl888/ad-rules/master/easy_github"
if [ ! -f ${GL1} ]; then
	echo "`eval $D` [Failed to Update EASY GITHUB Rule]"
	rm -f $LOCK
	exit 1
fi
gi=`sed -n '1p' $GL1`
gl=`sed -n '2p' $GL1`
[ "$gi" = "2" ] && curl --connect-timeout 6 --retry 2 -m 80 -kLfso $GL1 $gl
if [ ! -f ${GL1} ]; then
	echo "`eval $D` [Failed to Update EASY GITHUB Rule]"
	rm -f $LOCK
	exit 1
fi
gl=`grep "http" $GL1 | tail -n3`
for p in $gl; do
	curl --connect-timeout 6 --retry 2 -m 80 -kLfso $GL2 $p
	[ "$?" = "0" -o -s "$GL2" ] && break
done
if [ -f ${GL2} ]; then
	echo "`eval $D` [Update EASY GITHUB Rule Successfully]"
else
	echo "`eval $D` [Failed to Update EASY GITHUB Rule!]"
	exit 2
fi
awk '/^[0-9]/ {printf "address=/%s/%s\n",$2,$1};/^#/;/^$/' $GL2 | grep "address=" > $EG
sh /usr/share/dnsfilter/checkconf $EG
rm -f ${GL1} ${GL2}
rm -f $LOCK
exit 0
